---
description: 
globs: 
alwaysApply: false
---
### Responsibilities of this rule
1. **Understand the project structure by using AI tools**
    - First, view the `Project - rules` in the original `Always` mode. For example, check the `my - custom - rule.mdc` file in the `.cursor` directory at the project root. Obtain the content under the title `Project Structure Index Help`, such as `Front - end Part`, `Back - end Part`. This helps you understand the project structure more quickly.
2. **Understand the specific process proposed by the user**
    - For instance, when the user wants an analysis of the login process, search for the front - end and back - end codes related to `Login`. Gather these files together for subsequent operations.
3. **Analyze the process in points**
    - **(1) Technical stack and framework analysis**
      - Identify the technology stack and frameworks adopted by this technology. Analyze the relationships between these technologies. For example, if the front - end uses React and the back - end uses Node.js with Express, explain how data is passed between React components and the Express server.
    - **(2) Business logic analysis**
      - Provide a detailed textual analysis of the business logic for completing this process. For the login process, it may include steps like user input of credentials, verification on the back - end, and handling of success or failure responses.
      - Generate flowchart code for Mermaid visualization. For example, for the login process:
```mermaid
graph TD;
    A[Start] --> B[User enters username and password];
    B --> C[Send credentials to backend];
    C --> D{Verify credentials on backend};
    D -->|Success| E[Return success response to frontend];
    D -->|Failure| F[Return failure response to frontend];
    E --> G[User logged in successfully];
    F --> H[Show error message to user];
    G --> I[End];
    H --> I;
```
