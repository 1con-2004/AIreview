services:
  # Nginx服务
  nginx:
    container_name: aireview-nginx
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/dist:/usr/share/nginx/html:rw
      # 直接使用前端public目录中的图标，不使用dist目录中的，避免权限问题
      - ./frontend/public/icons:/usr/share/nginx/html/icons:rw
    depends_on:
      - backend
    networks:
      - aireview_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 后端服务
  backend:
    container_name: aireview-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: aireview-backend:latest  
    volumes:
      - ./backend:/app:rw
      - backend_modules:/app/node_modules
      - ./backend/logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - NODE_ENV=development
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=AIreview
      - DOCKER_HOST=unix:///var/run/docker.sock
      - JUDGE_NETWORK=aireview_network
      - CHOKIDAR_USEPOLLING=true
    privileged: true
    depends_on:
      db:
        condition: service_healthy
    networks:
      - aireview_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', res => (res.statusCode === 200 ? process.exit(0) : process.exit(1)))"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 数据库服务
  db:
    container_name: aireview-db
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max_allowed_packet=128M
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=AIreview
      - MYSQL_USER=aireview
      - MYSQL_PASSWORD=aireview
    volumes:
      - db_data:/var/lib/mysql
      - ./db/init:/docker-entrypoint-initdb.d
    ports:
      - "3307:3306"
    networks:
      - aireview_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 60s

networks:
  aireview_network:
    name: aireview_network
    driver: bridge

volumes:
  db_data:
    name: aireview_db_data
  backend_modules:
    name: aireview_backend_modules 