# 学习路径创建流程

## 学习路径模块概述
学习路径模块是基于学生的学习数据，利用AI大模型分析，提供个性化的学习建议和题目推荐的功能模块。该模块分为三个核心板块：弱点分析、学习方向和题目推荐。

## 数据流转流程图

```mermaid
flowchart TD
    A[用户访问个人中心页面] --> B[前端调用API获取学习路径数据]
    B --> C{检查是否存在缓存数据}
    C -->|是| D[返回缓存数据]
    C -->|否| E[计算用户不熟悉的标签]
    E --> F[标签通过率分析]
    F --> G[筛选弱点标签]
    G --> H{是否存在弱点标签?}
    H -->|否| I[返回空数据]
    H -->|是| J[智谱AI生成思路/资源/推荐题目]
    J --> K[存储数据到数据库]
    K --> L[返回数据到前端]
    D --> L
    I --> L
    L --> M[前端渲染学习路径区域]
```

## 详细流程说明

1. **前端初始化流程**
   - 用户访问个人中心页面
   - 页面加载完成后，前端调用三个学习路径API:
     - `/api/learning-path/weakness` - 获取弱点分析
     - `/api/learning-path/directions` - 获取学习方向
     - `/api/learning-path/recommend` - 获取题目推荐
   - 获取到数据后渲染学习路径区域

2. **弱点分析创建流程**
   - 后端接收请求并验证用户身份
   - 检查数据库中是否已有该用户的弱点分析数据
   - 如有，直接返回已有数据
   - 如无，执行如下步骤：
     - 查询用户的提交记录，关联题目表获取标签
     - 计算每个标签的题目通过率
     - 筛选出通过率低于50%且提交次数至少为2次的标签
     - 选取通过率最低的前3个标签
     - 调用智谱AI为每个标签生成学习思路
     - 将生成的数据保存到`learning_path_weakness_analysis`表
     - 返回数据到前端

3. **学习方向创建流程**
   - 后端接收请求并验证用户身份
   - 检查数据库中是否已有该用户的学习方向数据
   - 如有，直接返回已有数据
   - 如无，执行如下步骤：
     - 获取用户的弱点标签（从`learning_path_weakness_analysis`表）
     - 对每个弱点标签，调用智谱AI生成学习资源推荐
     - 要求AI从CSDN、LeetCode、知乎三个来源各推荐一个资源
     - 解析AI返回的JSON数据，获取资源标题、URL和来源
     - 将数据保存到`learning_path_directions`表
     - 返回数据到前端

4. **题目推荐创建流程**
   - 后端接收请求并验证用户身份
   - 检查数据库中是否已有该用户的题目推荐数据
   - 如有，直接返回已有数据
   - 如无，执行如下步骤：
     - 获取用户的弱点标签（从`learning_path_weakness_analysis`表）
     - 获取用户已解决的题目列表（status为'Accepted'的submissions）
     - 对每个弱点标签，查询包含该标签且用户未解决的题目
     - 排除困难难度的题目，每个标签随机选择最多2道题目
     - 将推荐题目保存到`learning_path_recommend`表
     - 返回数据到前端

5. **智谱AI调用流程**
   - 使用项目中现有的`zhipuAI.js`工具类调用智谱AI
   - 设置合适的prompt引导AI生成所需内容
   - 对AI返回的数据进行格式化和错误处理
   - 在调用失败时提供默认返回值

## 数据刷新机制
为避免频繁调用AI接口产生额外成本，同时保持数据的相对新鲜度，学习路径数据采用以下刷新机制：

1. 首次访问时，生成并缓存数据到数据库
2. 后续访问时，直接使用数据库中的缓存数据
3. 管理员可通过后台手动触发数据刷新
4. 用户每次提交新的题目解答后，系统记录但不立即更新学习路径
5. 系统可定期（如每周或每月）自动刷新所有用户的学习路径数据

## API接口说明

### 1. 获取弱点分析 
- 路径: `/api/learning-path/weakness`
- 方法: GET
- 需要认证: 是
- 返回数据:
  ```json
  {
    "success": true,
    "data": [
      {
        "id": 1,
        "user_id": 101,
        "tag": "动态规划",
        "idea": "动态规划是一种算法思想，核心在于将复杂问题分解为子问题，并存储子问题的解以避免重复计算...",
        "created_at": "2025-04-17T08:30:00Z"
      },
      ...
    ]
  }
  ```

### 2. 获取学习方向
- 路径: `/api/learning-path/directions`
- 方法: GET
- 需要认证: 是
- 返回数据:
  ```json
  {
    "success": true,
    "data": [
      {
        "id": 1,
        "user_id": 101,
        "tag": "动态规划",
        "url": "https://leetcode.cn/tag/dynamic-programming/",
        "title": "动态规划入门与提高",
        "source": "LeetCode",
        "created_at": "2025-04-17T08:35:00Z"
      },
      ...
    ]
  }
  ```

### 3. 获取题目推荐
- 路径: `/api/learning-path/recommend`
- 方法: GET
- 需要认证: 是
- 返回数据:
  ```json
  {
    "success": true,
    "data": [
      {
        "id": 1,
        "user_id": 101,
        "tag": "动态规划",
        "problem_number": "0070",
        "created_at": "2025-04-17T08:40:00Z"
      },
      ...
    ]
  }
  ```

## 可能的问题和解决方案

1. **问题**: 智谱AI返回格式不符合预期
   **解决方案**: 添加错误处理和数据格式化，提供默认返回值

2. **问题**: 用户没有足够的提交记录导致无法生成弱点标签
   **解决方案**: 返回空数据，前端显示"暂无数据"提示

3. **问题**: 题目标签与用户弱点不匹配
   **解决方案**: 优化标签提取算法，考虑题目难度和用户提交次数

4. **问题**: 推荐资源链接可能失效
   **解决方案**: 使用各平台的搜索链接作为备选，确保链接可访问 