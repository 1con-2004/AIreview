# 整体分析

## 前端UI布局
个人中心页面将分为两个主要部分：
1. **上半部分**：四张图表展示区域，布局参考 `statistics.vue` 文件中的学生详情弹窗图表部分，包括：
   - 题目完成情况（饼图）
   - 知识点掌握情况（雷达图）
   - 提交错误类型分析（饼图）
   - 解题用时分析（柱状图）

2. **下半部分**：题目完成状态表格，展示用户的题目完成情况，同样参考 `statistics.vue` 文件中的表格部分。

## 后端API需求
需要调用/修改的后端API：
1. 判断用户是否为学生（验证 `student_info` 表中是否有对应记录）
2. 获取题目完成情况数据（对应 `/api/admin/statistics/student-completion/:userId`）
3. 获取知识点掌握情况数据（对应 `/api/admin/statistics/student-knowledge/:userId`）
4. 获取提交错误类型分析数据（对应 `/api/admin/statistics/student-error-types/:userId`）
5. 获取解题用时分析数据（对应 `/api/admin/statistics/student-solving-time/:userId`）
6. 获取题目完成状态列表（对应 `/api/admin/statistics/student-problems`）

## 数据库查询逻辑
主要涉及以下数据库表：
1. `users` - 用户基本信息
2. `student_info` - 学生信息，需要检查当前用户是否有对应记录
3. `submissions` - 提交记录，用于统计完成情况
4. `problems` - 题目信息

核心查询逻辑包括：
- 查询用户是否为学生（`student_info` 表中是否有记录）
- 统计用户完成的题目数量和未完成题目数量
- 分析用户提交错误的类型分布
- 计算用户对不同知识点的掌握程度
- 分析用户解题用时情况

# 过程性分析

## 首先完成后端api

### 1. 修改现有API或添加新API
需要针对个人中心场景，在用户路由中添加或修改API端点，位置应该在 `backend/src/api/user/` 目录下。

统计类API已经在 `backend/src/api/admin/statistics.js` 中实现，需要修改这些API，使其可以被普通用户访问（目前可能受到管理员权限限制），或者复制这些API到用户路由中。

具体需要实现或修改的API端点包括：
- `/api/user/profile/check-student` - 检查用户是否为学生
- `/api/user/profile/completion` - 获取题目完成情况
- `/api/user/profile/knowledge` - 获取知识点掌握情况
- `/api/user/profile/error-types` - 获取错误类型分析
- `/api/user/profile/solving-time` - 获取解题用时分析
- `/api/user/profile/problems` - 获取题目完成状态列表

### 2. 数据库查询实现
这些API端点中的SQL查询已经在 `statistics.js` 中实现，可以直接复用，只需要调整权限验证部分。

核心SQL查询包括：
- 题目完成情况统计查询
- 知识点掌握情况查询
- 错误类型分析查询
- 解题用时分析查询
- 题目完成状态列表查询

### 3. API权限控制
确保这些API仅对已登录用户开放，并且只能查询自己的数据。

## 其次完成前端页面布局

### 1. 创建个人中心页面
在 `frontend/src/views/personal/` 目录下创建 `PersonalCenter.vue` 文件，实现个人中心页面。

### 2. 页面组件结构
页面布局分为以下部分：
- 顶部个人信息展示区域
- 中部四张图表展示区域（使用ECharts实现）
- 底部题目完成状态表格（使用Element Plus的表格组件实现）

### 3. 图表实现
使用ECharts实现四张图表：
- 题目完成情况饼图
- 知识点掌握情况雷达图
- 提交错误类型分析饼图
- 解题用时分析柱状图

参考 `statistics.vue` 中的图表实现代码。

### 4. 表格实现
使用Element Plus的表格组件实现题目完成状态表格，包括分页功能，参考 `statistics.vue` 中的表格实现代码。

### 5. 数据获取与展示
在页面加载时，首先检查用户是否为学生，如果是学生则获取相关数据并展示；如果不是学生，则显示提示信息。

### 6. 路由配置
在前端路由配置中添加个人中心页面路由。

## 流程步骤

[✅] 在后端创建检查用户是否为学生的API端点
[✅] 修改现有统计API或在用户路由中复制实现相同功能的API
[✅] 使用curl测试API连通性与权限控制
[✅] 在前端创建个人中心页面组件
[✅] 在前端路由配置中添加个人中心页面路由
[✅] 实现个人中心页面顶部个人信息展示区域
[✅] 实现题目完成情况饼图并测试
[✅] 实现知识点掌握情况雷达图并测试
[✅] 实现提交错误类型分析饼图并测试
[✅] 实现解题用时分析柱状图并测试
[✅] 实现题目完成状态表格及分页功能
[✅] 处理非学生用户的提示信息展示
[✅] 整体测试个人中心页面功能
[✅] 优化页面样式和响应式布局 